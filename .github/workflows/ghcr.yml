name: Docker Image - Riot Scraper Raw Data

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Prepare
      id: prep
      run: |
        DOCKERHUB_IMAGE=cicirello/alpine-plus-plus
        GHCR_IMAGE=ghcr.io/${{ github.repository_owner }}/riot-raw-data-scrapper
        VERSION=${GITHUB_REF#refs/tags/v}
        TAGS="${DOCKERHUB_IMAGE}:${VERSION},${DOCKERHUB_IMAGE}:latest"
        TAGS="${TAGS},${GHCR_IMAGE}:${VERSION},${GHCR_IMAGE}:latest"
        echo ::set-output name=tags::${TAGS}
        echo ::set-output name=version::${VERSION}
        echo ::set-output name=dockerhub_image::${DOCKERHUB_IMAGE}
        echo ::set-output name=ghcr_image::${GHCR_IMAGE}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@master
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@master

    - name: Login to Github Container Registry
      uses: docker/login-action@v1 
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GH_CONTAINER_REGISTRY }}

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        builder: ${{ steps.buildx.outputs.name }}
        context: ./data-mining/raw-data
        file: ./data-mining/raw-data/Dockerfile
        platforms: linux/amd64,linux/arm64,linux/ppc64le,linux/s390x,linux/386,linux/arm/v6,linux/arm/v7
        push: true
        tags: ${{ steps.prep.outputs.tags }}
        labels: org.opencontainers.image.version=${{ steps.prep.outputs.version }}
